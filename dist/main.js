(()=>{"use strict";const e=()=>{const e=function(){const e=[];for(let o=0;o<=9;o++){e[o]=[];for(let n=0;n<=9;n++)e[o][n]=""}return e}(),o=[];function n(e){return!(e<0||e>9)}return{gameboard:e,placeShip:function(t,a,r,c){if(!n(t)||!n(a)||""!==e[t][a])return console.log("Index out of board");if("vertical"===c&&n(t+r.length-1))for(let n=t;n<t+r.length;n++){if(""!==e[n][a])return console.log("Invalid spot");e[n][a]={type:`${r.length}ship`,ship:r,value:"O",isSunk:!1},o.push(e[n][a])}if("horizontal"===c&&n(a+r.length-1))for(let n=a;n<a+r.length;n++){if(""!==e[t][n])return console.log("Invalid spot");e[t][n]={type:`${r.length}ship`,ship:r,value:"O",isSunk:!1},o.push(e[t][n])}return e},receiveAttack:function(o,t){if(!n(o)||!n(t))return console.log("Attack out of board");{let n=e[o][t];if("●"===n)return;""===n?(e[o][t]="●",console.log("Miss")):"O"===n.value&&(n.ship.hit(),n.value="X",n.ship.isSunk()&&(n.isSunk=!0,function(o,n){const t=[e[o+1]?.[n],e[o-1]?.[n],e[o]?.[n+1],e[o]?.[n-1],e[o+1]?.[n+1],e[o-1]?.[n-1],e[o-1]?.[n+1],e[o+1]?.[n-1]];for(let a=0;a<t.length;a++)if(void 0!==t[a]&&"O"!==t[a].value&&"X"!==t[a].value)switch(t[a]="●",a){case 0:e[o+1][n]="●";break;case 1:e[o-1][n]="●";break;case 2:e[o][n+1]="●";break;case 3:e[o][n-1]="●";break;case 4:e[o+1][n+1]="●";break;case 5:e[o-1][n-1]="●";break;case 6:e[o-1][n+1]="●";break;case 7:e[o+1][n-1]="●"}}(o,t),console.log("Sunk")),console.log(n.isSunk))}},checkEndGame:function(){let e=0;for(let n of o)!0===n.isSunk&&e++;console.log(e),e>=10&&console.log("End game")}}},o=o=>({type:o,gameboard:e()});function n(e,o){const n=document.createElement("div");n.classList.add("container");for(let o=0;o<e.gameboard.gameboard.length;o++)for(let t=0;t<e.gameboard.gameboard[o].length;t++){const a=document.createElement("div");a.innerHTML=e.gameboard.gameboard[o][t],a.addEventListener("click",(()=>{e.gameboard.receiveAttack([o],[t]),a.innerHTML=e.gameboard.gameboard[o][t]})),n.appendChild(a)}o.append(n)}document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector(".gameboard-one"),t=document.querySelector(".gameboard-two"),a=(document.querySelector(".header"),o("human")),r=o("computer");n(a,e),n(r,t),console.log(a.gameboard.gameboard)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,