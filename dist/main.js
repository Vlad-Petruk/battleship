(()=>{"use strict";var e={d:(a,o)=>{for(var r in o)e.o(o,r)&&!e.o(a,r)&&Object.defineProperty(a,r,{enumerable:!0,get:o[r]})},o:(e,a)=>Object.prototype.hasOwnProperty.call(e,a)};e.d({},{c:()=>r});const a=e=>{let a=0;return{hit:function(){a+=1},isSunk:function(){return e<=a},length:e,getHits:()=>a}},o=e=>({type:e,gameboard:(e=>{const a=function(){const e=[];for(let a=0;a<=9;a++){e[a]=[];for(let o=0;o<=9;o++)e[a][o]=""}return e}(),o=[];function r(e){return!(e<0||e>9)}function t(){let a=0;for(let e of o)!0===e.isSunk&&a++;if(console.log(a),a>=10)return console.log(`${e} lose`),!0}return{gameboard:a,placeShip:function(e,t,n,l){if(!r(e)||!r(t)||""!==a[e][t])return console.log("Index out of board");if("vertical"===l&&r(e+n.length-1))for(let r=e;r<e+n.length;r++){if(""!==a[r][t])return console.log("Invalid spot");a[r][t]={type:`${n.length}ship`,ship:n,value:"O",isSunk:!1},o.push(a[r][t])}if("horizontal"===l&&r(t+n.length-1))for(let r=t;r<t+n.length;r++){if(""!==a[e][r])return console.log("Invalid spot");a[e][r]={type:`${n.length}ship`,ship:n,value:"O",isSunk:!1},o.push(a[e][r])}return a},receiveAttack:function(e,o){if(!r(e)||!r(o)||!0===t())return console.log("Attack out of board");{let r=a[e][o];if("●"===r)return;""===r?(a[e][o]="●",console.log("Miss")):"O"===r.value&&(r.ship.hit(),r.value="X",r.ship.isSunk()&&(r.isSunk=!0,console.log("Sunk")),console.log(r.isSunk),t())}},checkEndGame:t}})(e)});let r;document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector(".gameboard-one"),t=document.querySelector(".gameboard-two"),n=o("You"),l=o("Computer"),i=a(4),d=a(3),c=a(3),g=a(2),m=a(2),b=a(2),p=a(1),h=a(1),s=a(1),u=a(1);n.gameboard.placeShip(0,0,i,"horizontal"),n.gameboard.placeShip(9,6,d,"horizontal"),n.gameboard.placeShip(0,9,c,"vertical"),n.gameboard.placeShip(8,0,g,"horizontal"),n.gameboard.placeShip(5,4,m,"vertical"),n.gameboard.placeShip(2,6,b,"horizontal"),n.gameboard.placeShip(8,4,p,"horizontal"),n.gameboard.placeShip(2,2,h,"horizontal"),n.gameboard.placeShip(6,8,s,"horizontal"),n.gameboard.placeShip(5,0,u,"horizontal"),l.gameboard.placeShip(0,0,i,"horizontal"),l.gameboard.placeShip(9,6,d,"horizontal"),l.gameboard.placeShip(0,9,c,"vertical"),l.gameboard.placeShip(8,0,g,"horizontal"),l.gameboard.placeShip(5,4,m,"vertical"),l.gameboard.placeShip(2,6,b,"horizontal"),l.gameboard.placeShip(8,4,p,"horizontal"),l.gameboard.placeShip(2,2,h,"horizontal"),l.gameboard.placeShip(7,8,s,"horizontal"),l.gameboard.placeShip(5,0,u,"horizontal"),r=function(e,a){const o=document.createElement("div");function r(){o.textContent="";for(let a=0;a<e.gameboard.gameboard.length;a++)for(let r=0;r<e.gameboard.gameboard[a].length;r++){const t=document.createElement("div");"object"==typeof e.gameboard.gameboard[a][r]?(e.gameboard.gameboard[a][r].value="O")&&(t.innerHTML=e.gameboard.gameboard[a][r].value,t.classList.add("black")):"X"===e.gameboard.gameboard[a][r]?(t.innerHTML=e.gameboard.gameboard[a][r],t.classList.add("orange")):t.innerHTML=e.gameboard.gameboard[a][r],o.appendChild(t)}a.append(o)}return o.classList.add("container"),{render:r,attack:function a(o=0){if(o>=99)return void console.log("Maximum attempts reached. Exiting attack function.");let t=Math.floor(10*Math.random()),n=Math.floor(10*Math.random());if("●"!==e.gameboard.gameboard[t][n]&&"X"!==e.gameboard.gameboard[t][n].value&&"X"!==e.gameboard.gameboard[t][n])return e.gameboard.receiveAttack(t,n),"object"==typeof e.gameboard.gameboard[t][n]?(e.gameboard.gameboard[t][n]=e.gameboard.gameboard[t][n].value,setTimeout(a,1e3),void r()):void r();a(o+1)}}}(n,e),function(e,a){const o=document.createElement("div");o.classList.add("container");for(let a=0;a<e.gameboard.gameboard.length;a++)for(let t=0;t<e.gameboard.gameboard[a].length;t++){const n=document.createElement("div");o.appendChild(n),n.addEventListener("click",(()=>{e.gameboard.receiveAttack([a],[t]),"object"==typeof e.gameboard.gameboard[a][t]?(n.innerHTML=e.gameboard.gameboard[a][t].value,n.classList.add("orange")):(n.innerHTML=e.gameboard.gameboard[a][t],setTimeout(r.attack,1e3),r.render())}))}a.append(o)}(l,t),r.render(),console.log("dgsdg")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,